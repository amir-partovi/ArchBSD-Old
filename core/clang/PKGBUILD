# $Id$
# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Sebastian Nowicki <sebnow@gmail.com>
# Contributor: Devin Cofer <ranguvar{AT]archlinux[DOT}us>
# Contributor: Tobias Kieslich <tobias@justdreams.de>
# Contributor: Geoffroy Carrier <geoffroy.carrier@aur.archlinux.org>
# Contributor: Tomas Lindquist Olsen <tomas@famolsen.dk>
# Contributor: Roberto Alsina <ralsina@kde.org>
# Contributor: Gerardo Exequiel Pozzi <vmlinuz386@yahoo.com.ar>

pkgname=('llvm' 'clang')
pkgver=3.2
pkgrel=5
arch=('i686' 'x86_64')
url="http://llvm.org/"
license=('custom:University of Illinois/NCSA Open Source License')
makedepends=('libffi')
source=(http://llvm.org/releases/$pkgver/$pkgname-$pkgver.src.tar.gz
        http://llvm.org/releases/$pkgver/clang-$pkgver.src.tar.gz
        http://dev.archlinux.org/~foutrelis/sources/compiler-rt/compiler-rt-$pkgver.src.tar.xz
        llvm-Config-config.h
        llvm-Config-llvm-config.h
        cindexer-clang-path.patch
        llvm-3.1-fix-debug-line-info.patch
        clang-3.1-fix-libprofile_rt.a-location.patch
	patch-include_llvm_ADT_Triple.h
	patch-tools_clang_include_clang_Analysis_Analyses_FormatString.h
	patch-tools_clang_lib_Analysis_PrintfFormatString.cpp
	patch-tools_clang_lib_Headers_Makefile
	patch-tools_clang_lib_Sema_SemaChecking.cpp
	patch-tools_clang_tools_scan-build_scan-build
	patch-utils_llvm-build_llvmbuild_main.py)
sha256sums=('125090c4d26740f1d5e9838477c931ed7d9ad70d599ba265f46f3a42cb066343'
            '2aaaf03f7c0f6b16fe97ecc81247dc2bf2d4bec7620a77cc74670b7e07ff5658'
            'a9a6b73a1bd5fc763f3b3826a6ce796cb150042d37d319e06e72d3d9778aaac1'
            '312574e655f9a87784ca416949c505c452b819fad3061f2cde8aced6540a19a3'
            '597dc5968c695bbdbb0eac9e8eb5117fcd2773bc91edf5ec103ecffffab8bc48'
            '3074df5322900e087377a8e03a02115463ccc0011c25917c2f06df11facd9b92'
            'dbde0e4e3a2ec2652edff98bd461aa8264f62173b45677c43c1e72a0afd06497'
            '0d32ad283566357ca1bfbeb4cbe6b0b961943b79d3d718ed0435101c05629137'
            'd96a857bfa707c412211a1cc204b1220dd564b7e4d7b3b07d6be715eb5e3e9c1'
            '2cd7226575a9345ce92a40fa3b678d454c591bf871b1a88bba6a57e53388bbf4'
            '2994361c0565180456f195619817961b699a392bd9fe7ae1ccfe9b8bab99ea50'
            'b00533c5568a4ef81773ed7f0c38869419a27e2e537bb7580aeaeeabd247c1d2'
            '994d7bd9ea71282d5b2d716e9afad3f95aec285d0a6277cfede61d4692cacddd'
            'd53f814300141bc2feaa6a623d14d5c57c927855d9b741d2a75ed9fcaf06520f'
            '09c9df0ac36f121883c43848ce0c624d6c5edb58ec0b89a77f7550b28093324d')

#build() {
#  cd "$srcdir/$pkgname-$pkgver.src"

#  # At the present, clang must reside inside the LLVM source code tree to build
#  # See http://llvm.org/bugs/show_bug.cgi?id=4840
#  rm -rf tools/clang
#  cp -r "$srcdir/clang-$pkgver.src" tools/clang

#  rm -rf projects/compiler-rt
#  cp -r "$srcdir/compiler-rt-$pkgver.src" projects/compiler-rt

  # Fix installation directories, ./configure doesn't seem to set them right
#  gsed -i -e 's:\$(PROJ_prefix)/etc/llvm:/etc/llvm:' \
#         -e 's:\$(PROJ_prefix)/lib:$(PROJ_prefix)/lib/llvm:' \
#         -e 's:\$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
#    Makefile.config.in
#  gsed -i '/ActiveLibDir = ActivePrefix/s:lib:lib/llvm:' \
#    tools/llvm-config/llvm-config.cpp
#  gsed -i 's:LLVM_LIBDIR="${prefix}/lib":LLVM_LIBDIR="${prefix}/lib/llvm":' \
#    autoconf/configure.ac \
#    configure

  # Fix insecure rpath (http://bugs.archlinux.org/task/14017)
#  gsed -i 's:$(RPATH) -Wl,$(\(ToolDir\|LibDir\|ExmplDir\))::g' Makefile.rules

  # Fix clang path in CIndexer.cpp (https://bugs.archlinux.org/task/22799)
#  patch -d tools/clang -Np0 -i "$srcdir/cindexer-clang-path.patch"

  # Fix FS#29984: [clang] -coverage is broken
#  patch -d tools/clang -Np1 -i \
#    "$srcdir/clang-3.1-fix-libprofile_rt.a-location.patch"

  # Fix FS#31098: LLVM 3.1 produces invalid debug information
  # http://llvm.org/bugs/show_bug.cgi?id=13211
#  patch -Np1 -i "$srcdir/llvm-3.1-fix-debug-line-info.patch"

  #port patches
#  for i in patch-include_llvm_ADT_Triple.h \
#        patch-tools_clang_include_clang_Analysis_Analyses_FormatString.h \
#        patch-tools_clang_lib_Analysis_PrintfFormatString.cpp \
#        patch-tools_clang_lib_Headers_Makefile \
#        patch-tools_clang_lib_Sema_SemaChecking.cpp \
#        patch-tools_clang_tools_scan-build_scan-build \
#        patch-utils_llvm-build_llvmbuild_main.py; do
#  patch -p0 -i ${srcdir}/${i}
#  done

  # Drop "svn" suffix from version string
#  gsed -i 's/3\.2svn/3.2/g' configure

  # Apply strip option to configure
#  _optimized_switch="enable"
#  [[ $(check_option strip) == n ]] && _optimized_switch="disable"

  # Include location of libffi headers in CPPFLAGS
#  export CPPFLAGS="$CPPFLAGS $(pkg-config --cflags libffi)"

  # Use Python 2
#  mkdir "$srcdir/python2-path"
#  ln -s /usr/local/bin/python2 "$srcdir/python2-path/python"
#  export PATH="$srcdir/python2-path:$PATH"

  # Force the use of GCC instead of clang
#  CC=gcc CXX=g++ \
#  ./configure \
#    --prefix=/usr \
#    --libdir=/usr/lib/llvm \
#    --sysconfdir=/etc \
#    --enable-shared \
#    --enable-libffi \
#    --enable-targets=all \
#    --disable-expensive-checks \
#    --disable-debug-runtime \
#    --disable-assertions \
#    --$_optimized_switch-optimized

#  gmake REQUIRES_RTTI=1
#}

package_llvm() {
  pkgdesc="Low Level Virtual Machine"
  depends=('perl' 'libffi')
  install=llvm.install

  cd "$srcdir/$pkgname-$pkgver.src"

  # We move the clang directory out of the tree so it won't get installed and
  # then we bring it back in for the clang package
  mv tools/clang "$srcdir"

  # -j1 is due to race conditions during the installation of the OCaml bindings
  gmake -j1 DESTDIR="$pkgdir" install
  mv "$srcdir/clang" tools

  # OCaml bindings go to a separate package
  rm -rf "$srcdir"/{ocaml,ocamldoc}

  # Fix permissions of static libs
  chmod -x "$pkgdir"/usr/lib/llvm/*.a

  # Get rid of example Hello transformation
  rm "$pkgdir"/usr/lib/llvm/*LLVMHello.*

  # Add ld.so.conf.d entry
  install -d "$pkgdir/etc/ld.so.conf.d"
  echo /usr/lib/llvm >"$pkgdir/etc/ld.so.conf.d/llvm.conf"

  if [[ $CARCH == x86_64 ]]; then
    # Needed for multilib (https://bugs.archlinux.org/task/29951)
    # Header stubs are taken from Fedora
    for _header in config llvm-config; do
      mv "$pkgdir/usr/include/llvm/Config/$_header"{,-64}.h
      cp "$srcdir/llvm-Config-$_header.h" \
        "$pkgdir/usr/include/llvm/Config/$_header.h"
    done
  fi

  install -dm755 "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
  install -m644  LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_clang() {
  pkgdesc="C language family frontend for LLVM"
  url="http://clang.llvm.org/"
  depends=("llvm=$pkgver-$pkgrel" 'gcc')

  # Fix installation path for clang docs
  gsed -i 's:$(PROJ_prefix)/share/doc/llvm:$(PROJ_prefix)/share/doc/clang:' \
    "$srcdir/llvm-$pkgver.src/Makefile.config"

  cd "$srcdir/llvm-$pkgver.src/tools/clang"
  gmake DESTDIR="$pkgdir" install

  # Fix permissions of static libs
  chmod -x "$pkgdir"/usr/lib/llvm/*.a

  # Revert the path change in case we want to do a repackage later
  gsed -i 's:$(PROJ_prefix)/share/doc/clang:$(PROJ_prefix)/share/doc/llvm:' \
    "$srcdir/llvm-$pkgver.src/Makefile.config"

  install -dm755 "$pkgdir/usr/share/licenses/clang/LICENSE"

  install -m644 LICENSE.TXT "$pkgdir/usr/share/licenses/clang/LICENSE"

}

# vim:set ts=2 sw=2 et:
