#!/usr/bin/bash

################################
# Generate Minimal ArchBSD ISO #
################################

#Set some variables
curdir=`pwd`
temproot=${curdir}/ArchBSD_temp
isoroot=${curdir}/ArchBSD
files=${curdir}/files
packagelist="archbsd-keyring bash ca_root_nss curl cyrus-sasl gettext gnupg gpgme libarchive libassuan libgcrypt libgpg-error libiconv libksba libldap libltdl libsasl libtool pacman-mirrorlist pinentry pkgconf pth freebsd-kernel gcc-libs libpthread-stubs openrc pacman"
curdir=`pwd`
date=`date +"%d%m%Y"`
check() {
        if [ $UID -ne 0 ]; then
                echo "This script needs to be run as root" && exit
        fi

	if [ ! -e ${files}/filelist ]; then
		echo "Filelist doesn't exist" && exit
	fi

        if [ ! -e ${files}/dirlist ]; then
                echo "Dirlist doesn't exist" && exit
        fi

	if [ ! -d ${temproot} ]; then
		mkdir ${temproot}
	fi

        if [ ! -d ${isoroot} ]; then
                mkdir ${isoproot}
        fi
}

mktemproot() {
	install -dm755 ${temproot}/var/{lib,cache}/pacman
	pacman -Sy base -r ${temproot} --cachedir ${temproot}/var/cache/pacman/pkg/
}

mkdirlayout() {
	for dir in bin  boot  dev  etc  lib  libexec  \
		 media  mnt  proc  rescue  root  \
		 sbin  sys  tmp  usr  var rw_etc rw_var; do
	install -dm755 ${isoroot}/${dir}
	done

	for dirs in usr/bin usr/sbin usr/libexec usr/share usr/lib; do
		install -dm755 ${isoroot}/${dirs}
	done

        install -dm755 ${isoroot}/var/{lib,cache}/pacman

}

copyfiles() {
	while read file; do
		cp -a ${temproot}${file} ${isoroot}${file}
	done < ${files}/filelist

        while read libfile; do
                cp -Ra ${temproot}${libfile} ${isoroot}/usr/lib/
	done < ${files}/liblist
}

copydirs() {
	while read dir; do
		cp -a ${temproot}${dir} ${isoroot}${dir}
	done < ${files}/dirlist

	for cdirs in bin sbin libexec lib; do
		cp -a ${temproot}/${cdirs} ${isoroot}/
	done
}

package_install() {
	pacman -Sydd --force ${packagelist} -r ${isoroot} --cachedir ${isoroot}/var/cache/pacman/pkg/
}

grub_install() {
	grubpath=${isoroot}/boot/grub/
	pacman -Sydd grub-common grub-bios -r ${isoroot} --cachedir ${isoroot}/var/cache/pacman/pkg/
	
        mv ${isoroot}/usr/lib/grub/i386-pc* ${grubpath}
	
	ln -s ${isoroot}/usr/lib/grub/i386-pc/* ${grubpath}

	cp ${files}/{grub.cfg,eltorito.img,splash.png,font.pf2} ${grubpath}
	
}

config_setup() {
	cp ${files}/fstab ${isoroot}/etc/fstab
	cp ${files}/cshrc ${isoroot}/root/.cshrc		
	rm -f ${isoroot}/etc/runlevels/boot/root
	chroot ${isoroot} /sbin/rc-update add modules default
        chroot ${isoroot} /sbin/ldconfig -m /lib
        chroot ${isoroot} /sbin/ldconfig -m /usr/lib
        chroot ${isoroot} /sbin/ldconfig -m /usr/local/lib
	cp ${files}/modules ${isoroot}/etc/conf.d/modules
	echo 'HOSTNAME="ArchBSD"' > ${isoroot}/etc/conf.d/hostname
	install -m755 ${files}/install.txt ${isoroot}/root/install.txt
 	install -m644 ${files}/pacstrap ${isoroot}/usr/bin/pacstrap
	chmod +x ${isoroot}/usr/bin/pacstrap	
	cp -a /etc/pacman.d/gnupg "$isoroot/etc/pacman.d/"

}

make_iso() {
	mkisofs -R -b boot/grub/eltorito.img -no-emul-boot -boot-load-size 4 -boot-info-table -o ArchBSD-x86_64-${date}.iso ${isoroot}
}

check

#mktemproot

#mkdirlayout

copyfiles

copydirs

#package_install

#grub_install

config_setup

make_iso
