# $Id: PKGBUILD 174760 2013-01-06 20:10:23Z jgc $
# Maintainer: Jan de Groot <jgc@archlinux.org>

pkgname=nss
pkgver=3.15.1
_pkgver=3.15.1
pkgrel=4
pkgdesc="Mozilla Network Security Services"
arch=(i686 x86_64)
url="http://www.mozilla.org/projects/security/pki/nss/"
license=('MPL' 'GPL')
_nsprver=4.9.4
depends=("nspr>=${_nsprver}" 'sqlite')
# using bash in some scripts
makedepends=('perl' 'bash')
options=('!strip')
_port_patches=(
        patch-bug301986
        patch-bug856300
        patch-const
        patch-coreconf_FreeBSD.mk
        patch-coreconf_UNIX.mk
        patch-coreconf_arch.mk
        patch-coreconf_command.mk
        patch-coreconf_rules.mk
        patch-coreconf_ruleset.mk
        patch-lib-freebl-Makefile
        patch-lib_freebl_mpi_mpcpucache.c
        patch-lib_softoken_pkcs11c.c
        patch-sysdb
        patch-tests
        )
source=(ftp://ftp.mozilla.org/pub/security/nss/releases/NSS_${pkgver//./_}_RTM/src/${pkgname}-${pkgver}.tar.gz
        nss.pc.in
        nss-config.in
        add_spi+cacert_ca_certs.patch
        "${_port_patches[@]}"
        )
sha1sums=('1aa7c0ff8af7fb2c8b6e4886ae2291f4bfe0d5c0'
          'aa5b2c0aa38d3c1066d511336cf28d1333e3aebd'
          '8c7429500547e13ac789a1fe187f50c6eb0562aa'
          'be6ef0f124f188ebb76f4d83e13466bdcfb27dd3'
          '1c07de50471b7b49746864ec3510e154f895847a'
          '09a7db6d61a6b86345937b6c0fcd6e049e5468ae'
          'ff044518858019953e9568750944fb0cbd2d52c1'
          '4d3485c714ffaa4a0debf96a7598cbaf82c5caa0'
          'fa62faf3ef6e6ce1ed9de7a0308b2c4d2283ab91'
          'ae10037a3cc11a4ca9694f6bdc0cf7573fef32e5'
          '864edb48ab1dbb3f28ba607d5df5ac3f8e02bc56'
          '2334c9e3c105c6b6e1fc62841b9b1ab2bc4c3ab0'
          '40b160aa4efac7591ce1c8eb10f20b160fcbc5a3'
          'd464b9c3b15e2132dca6a49ce6201996a01b03ed'
          '5ddad7e8c87d6772d07192b79d16e4e78b403906'
          'b52a8454adbe666b646df1fbcc111dfc6505140c'
          'bb0b15ee98b7bf826f1f7dab18f401ee27f5f3a0'
          '5c20dbe57c5094ac18562332961a7be0d4583d98')

prepare() {
  cd $pkgname-$pkgver

  # Add CAcert and spi-inc.org CA certificates.
  # See http://wiki.cacert.org/NSSLib for how to generate
  patch -Np1 -i ../add_spi+cacert_ca_certs.patch

  cd nss
  for i in "${_port_patches[@]}"; do
    msg "patch $i"
  	patch -p0 -i "${srcdir}/$i"
  done

  sed -e 's|@exec_prefix@|/usr|' \
      -e 's|@includedir@|/usr/include/nss|' \
      -e 's|@libdir@|/usr/lib/nss|' \
      -e 's|@prefix@|/usr|' \
    "$srcdir"/nss-config.in > nss-config
  sed -i '' -e '/NSS_DEFAULT_SYSTEM/s,/etc,/usr&,' \
    lib/sysinit/nsssysinit.c

  find . -name '*.c' -o -name '*.h' | xargs sed -i '' -e 's|"nspr.h"|<nspr.h>|'

  find tests -name '*.sh' | xargs grep -l -F '/bin/bash' | \
  	xargs sed -i '' -e 's|#! */bin/bash|#!/usr/bin/bash|'

  find . -name '*.c' -o -name '*.h' | xargs sed -i '' -e 's@<sqlite3.h>@</usr/include/sqlite3.h>@'

  #db.h is moved to fdb.h
  sed -i '' -e 's|<db.h>|<fdb.h>|g' lib/softoken/legacydb/*.{h,c}
}

build() {
  cd $pkgname-$pkgver/nss

  unset CFLAGS CPPFLAGS
  export BUILD_OPT=1
  export PKG_CONFIG_ALLOW_SYSTEM_LIBS=1
  export PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1
  export NSS_USE_SYSTEM_SQLITE=1
  export NSS_ENABLE_ECC=1
  export NSPR_INCLUDE_DIR=`pkg-config --cflags-only-I nspr | sed 's/-I//'`
  export NSPR_LIB_DIR=`pkg-config --libs-only-L nspr | sed 's/-L.//'`
  export XCFLAGS="${CFLAGS}"
  export NSS_USE_SYSTEM_SQLITE=1
  export NSS_ENABLE_ECC=1
  export BSD_LDOPTS="-pthread"

  [ "$CARCH" = "x86_64" ] && export USE_64=1

  gmake -j 1 -C coreconf
  gmake -j 1 -C lib/dbm
  gmake -j 1
}

package() {
  cd $pkgname-$pkgver
  install -m755 -d "$pkgdir"/usr/{bin,include/nss,lib/pkgconfig}

  NSS_VMAJOR=`grep "#define.*NSS_VMAJOR" nss/lib/nss/nss.h | awk '{print $3}'`
  NSS_VMINOR=`grep "#define.*NSS_VMINOR" nss/lib/nss/nss.h | awk '{print $3}'`
  NSS_VPATCH=`grep "#define.*NSS_VPATCH" nss/lib/nss/nss.h | awk '{print $3}'`

msg "pkgconf files"
  sed -e "s,%libdir%,/usr/lib,g" \
  	  -e "s,%prefix%,/usr,g" \
	  -e "s,%exec_prefix%,/usr/bin,g" \
	  -e "s,%includedir%,/usr/include/nss,g" \
	  -e "s,%NSPR_VERSION%,${_pkgver},g" \
	  -e "s,%NSS_VERSION%,${_pkgver},g" \
	  "${srcdir}/nss.pc.in" > "${pkgdir}/usr/lib/pkgconfig/nss.pc"
  ln -sf nss.pc "${pkgdir}/usr/lib/pkgconfig/mozilla-nss.pc"
  chmod 644 ${pkgdir}/usr/lib/pkgconfig/*.pc

msg "nss-config"
  sed -e "s,@libdir@,/usr/lib,g" \
  	  -e "s,@prefix@,/usr/bin,g" \
	  -e "s,@exec_prefix@,/usr/bin,g" \
	  -e "s,@includedir@,/usr/include/nss,g" \
	  -e "s,@MOD_MAJOR_VERSION@,${NSS_VMAJOR},g" \
	  -e "s,@MOD_MINOR_VERSION@,${NSS_VMINOR},g" \
	  -e "s,@MOD_PATCH_VERSION@,${NSS_VPATCH},g" \
	  -e "s,@MAJOR@,${NSS_VMAJOR},g" \
	  -e "s,@MINOR@,${NSS_VMINOR},g" \
	  -e "s,@PATCH@,${NSS_VPATCH},g" \
	  "${srcdir}/nss-config.in" > "${pkgdir}/usr/bin/nss-config"
  chmod 755 "${pkgdir}/usr/bin/nss-config"


  cd dist/*.OBJ/bin
  for file in *util shlibsign signtool signver ssltap; do
    install -m755 "$file" "${pkgdir}/usr/bin/"
  done

  cd ../lib
  for file in *.so; do
    install -m755 "$file" "${pkgdir}/usr/lib/${file}.1"
    ln -sf "${file}.1" "${pkgdir}/usr/lib/${file}"
  done
  for file in *.chk; do
    install -m644 "$file" "${pkgdir}/usr/lib/"
  done
  install -m644 libcrmf.a "${pkgdir}/usr/lib/"

  cd ../../public/nss
  for file in *.h; do
    install -m644 "$file" "${pkgdir}/usr/include/nss/"
  done
}
