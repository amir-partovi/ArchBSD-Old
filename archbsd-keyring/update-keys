#!/usr/bin/bash

export LANG=C

TMPDIR=$(mktemp -d $RANDOM)
trap "rm -rf '${TMPDIR}'" EXIT

KEYSERVER='hkp://pool.sks-keyservers.net'
GPG="gpg --quiet --batch --no-tty --no-permission-warning --keyserver "${KEYSERVER}" --homedir ${TMPDIR}"

pushd "$(dirname "$0")" >/dev/null

$GPG --gen-key <<EOF
%echo Generating Arch BSD Keyring keychain master key...
Key-Type: RSA
Key-Length: 1024
Key-Usage: sign
Name-Real: Arch BSD Keyring Keychain Master Key
Name-Email: archbsd-keyring@localhost
Expire-Date: 0
%commit
%echo Done
EOF

rm -rf master packager archbsd-trusted
mkdir master packager

while read -ra data; do
	keyid="${data[0]}"
	username="${data[@]:1}"
	${GPG} --recv-keys ${keyid} &>/dev/null
	printf 'minimize\nquit\ny\n' | \
		${GPG} --command-fd 0 --edit-key ${keyid}
	${GPG} --yes --lsign-key ${keyid} &>/dev/null
	${GPG} --armor --output master/${username}.asc --export ${keyid}
	echo "${keyid}:4:" >> archbsd-trusted
done < master-keyids
${GPG} --import-ownertrust < archbsd-trusted 2>/dev/null

while read -ra data; do
	keyid="${data[0]}"
	username="${data[@]:1}"
	${GPG} --recv-keys ${keyid} &>/dev/null
	printf 'clean\nquit\ny\n' | \
		${GPG} --command-fd 0 --edit-key ${keyid}
	FD=$(mktemp $RANDOM)
	exec 4>"${FD}"
	if ! ${GPG} --list-keys --with-colons ${keyid} 2>/dev/null | grep -q '^pub:f:'; then
		echo "key is not fully trusted: ${keyid} ${username}"
	else
		${GPG} --armor --output packager/${username}.asc --export ${keyid}
	fi
done < packager-keyids

cat master/*.asc packager/*.asc > archbsd.gpg

popd >/dev/null
