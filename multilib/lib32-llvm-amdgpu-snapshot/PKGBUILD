# Maintainer: Thomas Dziedzic < gostrc at gmail >
# Contributor: Roberto Alsina <ralsina@kde.org>
# Contributor: Tomas Lindquist Olsen <tomas@famolsen.dk>
# Contributor: Anders Bergh <anders@archlinuxppc.org>
# Contributor: Tomas Wilhelmsson <tomas.wilhelmsson@gmail.com>

pkgbase=lib32-llvm-amdgpu-snapshot
pkgname=('lib32-llvm-amdgpu-snapshot' 'lib32-llvm-amdgpu-lib-snapshot')
pkgver=20130403
pkgrel=3
pkgdesc='Low Level Virtual Machine with AMDGPU enabled to build r600g shader llvm support (32-bits)'
arch=('x86_64')
url="http://llvm.org"
license=('custom:University of Illinois/NCSA Open Source License')
makedepends=('lib32-libffi' 'python2' 'lib32-devel')
source=(ftp://ftp.archlinux.org/other/packages/llvm-amdgpu/llvm-amdgpu-master.${pkgver}.tar.gz)
md5sums=('4baa7b8da9eff4811952b6f855c141ca')

prepare() {
  cd "$srcdir"/llvm-c*

  gsed -i 's/python$/python2/' utils/llvm-build/llvm-build
}

build() {
  cd "$srcdir"/llvm-c*

  export CC="gcc -m32"
  export CXX="g++ -m32"
  export CPP=cpp
  export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
  export CFLAGS="${CFLAGS//-fstack-protector/}"
  export CPPFLAGS="${CPPFLAGS//-fstack-protector/}"
  export CXXFLAGS="${CXXFLAGS//-fstack-protector/}"

  rm -rf tools/clang
  rm -rf projects/compiler-rt

  # Include location of libffi headers in CPPFLAGS
  export CPPFLAGS="$CPPFLAGS $(pkg-config --cflags libffi)"

  # Fix installation directories, ./configure doesn't seem to set them right
  gsed -i -e 's:\$(PROJ_prefix)/etc/llvm:/etc/llvm:' \
         -e 's:\$(PROJ_prefix)/lib:$(PROJ_prefix)/lib32:' \
    Makefile.config.in
  gsed -i '/ActiveLibDir = ActivePrefix/s:lib:lib32:' \
    tools/llvm-config/llvm-config.cpp
  gsed -i 's:LLVM_LIBDIR="${prefix}/lib":LLVM_LIBDIR="${prefix}/lib32":' \
    autoconf/configure.ac \
    configure

  # Fix insecure rpath (http://bugs.archlinux.org/task/14017)
  gsed -i 's:$(RPATH) -Wl,$(\(ToolDir\|LibDir\|ExmplDir\))::g' Makefile.rules

  # Apply strip option to configure
  _optimized_switch="enable"
  [[ $(check_option strip) == n ]] && _optimized_switch="disable"

  # We had to force host and target to get
  # a proper triplet reported by llvm

  PYTHON=python2 ./configure \
    --prefix=/usr \
    --libdir=/usr/lib32 \
    --sysconfdir=/etc \
    --enable-shared \
    --enable-libffi \
    --enable-targets=all \
    --enable-experimental-targets=R600 \
    --disable-expensive-checks \
    --with-binutils-include=/usr/include \
    --host=i386-unknown-freebsd9.1 \
    --target=i386-unknown-freebsd9.1 \
    --$_optimized_switch-optimized

  gmake REQUIRES_RTTI=1
}

package_lib32-llvm-amdgpu-snapshot() {
  depends=('lib32-libffi' 'lib32-llvm-amdgpu-lib-snapshot' 'llvm-amdgpu-snapshot')
  conflicts=('lib32-llvm')

  cd "$srcdir"/llvm-c*

  gmake DESTDIR="$pkgdir" install

  mv "$pkgdir/usr/bin/i386-unknown-freebsd9.1-llvm-config" "$pkgdir/usr/lib32/llvm-config"

  # Fix permissions of static libs
  chmod -x "$pkgdir"/usr/lib32/*.a
  # moved to lib32-llvm-amdgpu-lib-snapshot
  rm "$pkgdir"/usr/lib32/libLLVM-3.2svn.so

  install -dm755 "$pkgdir/usr/share/licenses/$pkgname"
  install -m644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"

  mv "$pkgdir"/usr/include/llvm/Config/*config.h "$pkgdir/"
  rm -rf "$pkgdir"/usr/{bin,include,docs}
  install -d "$pkgdir/usr/include/llvm/Config"
  mv "$pkgdir/config.h" "$pkgdir/usr/include/llvm/Config/config-32.h"
  mv "$pkgdir/llvm-config.h" "$pkgdir/usr/include/llvm/Config/llvm-config-32.h"

  rm -r "$pkgdir/usr/lib/ocaml"

  install -d "$pkgdir"/usr/bin
  mv "$pkgdir/usr/lib32/llvm-config" "$pkgdir/usr/bin/llvm-config32"
}

package_lib32-llvm-amdgpu-lib-snapshot() {
  depends=('lib32-libffi' 'lib32-devel')

  cd "$srcdir"/llvm-c*

  gmake DESTDIR="$pkgdir" install

  mv -v "$pkgdir"/usr/lib32/libLLVM-3.2svn.so "$pkgdir"/

  # Remove useless files
  rm -r "$pkgdir"/usr/{bin,include,docs,lib32/*}

  mv "$pkgdir"/libLLVM-3.2svn.so "$pkgdir"/usr/lib32/

  rm -r "$pkgdir/usr/lib/ocaml"

  install -dm755 "$pkgdir/usr/share/licenses/$pkgname"
  install -m644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
